spring.application.name=reservations-service

server.port=0

# Eureka client
eureka.client.service-url.defaultZone=http://${EUREKA_CLIENT:localhost:8761}/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# JPA y Datasource
spring.jpa.hibernate.ddl-auto=update
# ToDo: useSSL=${SSL_VALUE:false}
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost:3306}/arqui?useSSL=true&allowPublicKeyRetrieval=true
spring.datasource.username=${MYSQL_USERNAME:root}
spring.datasource.password=${MYSQL_PASSWORD:QaZwsx12#00}


# Hibernate dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Logging
logging.level.root=DEBUG

# Configuración para Springdoc OpenAPI UI
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.url=/reservations-service/v3/api-docs

management.endpoints.web.exposure.include=mappings
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

server.servlet.context-path=/

# Configuración de OpenAPI
openapi.service.title=reservations-service doc
openapi.service.version=1.0.0
openapi.service.url=http://${URL_SERVICE:localhost}:8080

# Configuración de Springdoc OpenAPI y Swagger UI
springdoc.enable-native-support=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.config-url=/reservations-service/v3/api-docs/swagger-config
springdoc.api-docs.path=/reservations-service/v3/api-docs

# Rutas de documentación de microservicios
springdoc.swagger-ui.urls[0].url=/reservations-service/v3/api-docs
springdoc.swagger-ui.urls[0].name=reservations-service
springdoc.swagger-ui.urls[0].display-name=reservations-service

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always