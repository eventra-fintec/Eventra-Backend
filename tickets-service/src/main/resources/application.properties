spring.application.name=tickets-service

server.port=0

# Eureka client
eureka.client.service-url.defaultZone=http://${EUREKA_CLIENT:localhost:8761}/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.jpa.hibernate.ddl-auto=update
logging.level.root=info

spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost:3306}/arqui?useSSL=true&allowPublicKeyRetrieval=true
spring.datasource.username=${MYSQL_USERNAME:root}
spring.datasource.password=${MYSQL_PASSWORD:QaZwsx12#00}

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Configuración para Springdoc OpenAPI UI
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.url=/tickets-service/v3/api-docs

management.endpoints.web.exposure.include=mappings
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

server.servlet.context-path=/

# Configuración de OpenAPI
openapi.service.title=tickets-service doc
openapi.service.version=1.0.0
openapi.service.url=http://localhost:8080

# Configuración de Springdoc OpenAPI y Swagger UI
springdoc.enable-native-support=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.config-url=/tickets-service/v3/api-docs/swagger-config
springdoc.api-docs.path=/tickets-service/v3/api-docs

# Rutas de documentación de microservicios
springdoc.swagger-ui.urls[0].url=/tickets-service/v3/api-docs
springdoc.swagger-ui.urls[0].name=tickets-service
springdoc.swagger-ui.urls[0].display-name=tickets-service

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always